{"ast":null,"code":"// src/hooks/usePackages.js\nimport{useEffect,useState,useMemo}from\"react\";import{useTranslation}from\"react-i18next\";import{supabase}from\"../lib/supabaseClient.js\";export default function usePackages(){let{live=true}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{i18n}=useTranslation();const lang=(i18n.resolvedLanguage||i18n.language||\"en\").split(\"-\")[0];const[rows,setRows]=useState([]);const[loading,setLoad]=useState(true);const[error,setError]=useState(null);const fetchData=async()=>{setLoad(true);setError(null);const{data,error}=await supabase.from(\"packages\").select(\"\\n        id, slug, is_active, default_image,\\n        price_tiers ( pax, price_idr, audience ),\\n        package_locales ( lang, title, summary, spots, itinerary, include, note )\\n      \").eq(\"is_active\",true).order(\"created_at\",{ascending:true});if(error){setError(error);setRows([]);setLoad(false);return;}const mapped=(data||[]).map(p=>{var _p$package_locales,_p$package_locales2,_p$package_locales3;const loc=((_p$package_locales=p.package_locales)===null||_p$package_locales===void 0?void 0:_p$package_locales.find(l=>l.lang===lang))||((_p$package_locales2=p.package_locales)===null||_p$package_locales2===void 0?void 0:_p$package_locales2.find(l=>l.lang===\"en\"))||((_p$package_locales3=p.package_locales)===null||_p$package_locales3===void 0?void 0:_p$package_locales3[0])||null;// default audience: domestic\nconst tiers=(p.price_tiers||[]).filter(t=>(t.audience||\"domestic\")===\"domestic\");return{id:p.id,slug:p.slug,default_image:p.default_image,locale:loc,price_tiers:tiers};});setRows(mapped);setLoad(false);};useEffect(()=>{fetchData();/* eslint-disable-next-line */},[lang]);useEffect(()=>{if(!live)return;const ch=supabase.channel(\"packages-live\").on(\"postgres_changes\",{event:\"*\",schema:\"public\",table:\"packages\"},fetchData).on(\"postgres_changes\",{event:\"*\",schema:\"public\",table:\"price_tiers\"},fetchData).on(\"postgres_changes\",{event:\"*\",schema:\"public\",table:\"package_locales\"},fetchData).subscribe();return()=>supabase.removeChannel(ch);},[live]);return{rows,loading,error,refetch:fetchData};}","map":{"version":3,"names":["useEffect","useState","useMemo","useTranslation","supabase","usePackages","live","arguments","length","undefined","i18n","lang","resolvedLanguage","language","split","rows","setRows","loading","setLoad","error","setError","fetchData","data","from","select","eq","order","ascending","mapped","map","p","_p$package_locales","_p$package_locales2","_p$package_locales3","loc","package_locales","find","l","tiers","price_tiers","filter","t","audience","id","slug","default_image","locale","ch","channel","on","event","schema","table","subscribe","removeChannel","refetch"],"sources":["C:/Projects/cidika-travel/src/hooks/usePackages.js"],"sourcesContent":["// src/hooks/usePackages.js\r\nimport { useEffect, useState, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { supabase } from \"../lib/supabaseClient.js\";\r\n\r\nexport default function usePackages({ live = true } = {}) {\r\n  const { i18n } = useTranslation();\r\n  const lang = (i18n.resolvedLanguage || i18n.language || \"en\").split(\"-\")[0];\r\n\r\n  const [rows, setRows]     = useState([]);\r\n  const [loading, setLoad]  = useState(true);\r\n  const [error, setError]   = useState(null);\r\n\r\n  const fetchData = async () => {\r\n    setLoad(true);\r\n    setError(null);\r\n\r\n    const { data, error } = await supabase\r\n      .from(\"packages\")\r\n      .select(`\r\n        id, slug, is_active, default_image,\r\n        price_tiers ( pax, price_idr, audience ),\r\n        package_locales ( lang, title, summary, spots, itinerary, include, note )\r\n      `)\r\n      .eq(\"is_active\", true)\r\n      .order(\"created_at\", { ascending: true });\r\n\r\n    if (error) {\r\n      setError(error);\r\n      setRows([]);\r\n      setLoad(false);\r\n      return;\r\n    }\r\n\r\n    const mapped = (data || []).map((p) => {\r\n      const loc =\r\n        p.package_locales?.find((l) => l.lang === lang) ||\r\n        p.package_locales?.find((l) => l.lang === \"en\") ||\r\n        p.package_locales?.[0] ||\r\n        null;\r\n\r\n      // default audience: domestic\r\n      const tiers = (p.price_tiers || []).filter((t) => (t.audience || \"domestic\") === \"domestic\");\r\n\r\n      return {\r\n        id: p.id,\r\n        slug: p.slug,\r\n        default_image: p.default_image,\r\n        locale: loc,\r\n        price_tiers: tiers,\r\n      };\r\n    });\r\n\r\n    setRows(mapped);\r\n    setLoad(false);\r\n  };\r\n\r\n  useEffect(() => { fetchData(); /* eslint-disable-next-line */ }, [lang]);\r\n\r\n  useEffect(() => {\r\n    if (!live) return;\r\n    const ch = supabase\r\n      .channel(\"packages-live\")\r\n      .on(\"postgres_changes\", { event: \"*\", schema: \"public\", table: \"packages\" }, fetchData)\r\n      .on(\"postgres_changes\", { event: \"*\", schema: \"public\", table: \"price_tiers\" }, fetchData)\r\n      .on(\"postgres_changes\", { event: \"*\", schema: \"public\", table: \"package_locales\" }, fetchData)\r\n      .subscribe();\r\n    return () => supabase.removeChannel(ch);\r\n  }, [live]);\r\n\r\n  return { rows, loading, error, refetch: fetchData };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
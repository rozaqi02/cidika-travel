{"ast":null,"code":"import StorageFileApi from './packages/StorageFileApi';\nimport StorageBucketApi from './packages/StorageBucketApi';\nexport class StorageClient extends StorageBucketApi {\n  constructor(url, headers = {}, fetch, opts) {\n    super(url, headers, fetch, opts);\n  }\n  /**\r\n   * Perform file operation in a bucket.\r\n   *\r\n   * @param id The bucket id to operate on.\r\n   */\n  from(id) {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch);\n  }\n}","map":{"version":3,"names":["StorageFileApi","StorageBucketApi","StorageClient","constructor","url","headers","fetch","opts","from","id"],"sources":["C:\\projects\\cidika-travel\\node_modules\\@supabase\\storage-js\\src\\StorageClient.ts"],"sourcesContent":["import StorageFileApi from './packages/StorageFileApi'\r\nimport StorageBucketApi from './packages/StorageBucketApi'\r\nimport { Fetch } from './lib/fetch'\r\n\r\nexport interface StorageClientOptions {\r\n  useNewHostname?: boolean\r\n}\r\n\r\nexport class StorageClient extends StorageBucketApi {\r\n  constructor(\r\n    url: string,\r\n    headers: { [key: string]: string } = {},\r\n    fetch?: Fetch,\r\n    opts?: StorageClientOptions\r\n  ) {\r\n    super(url, headers, fetch, opts)\r\n  }\r\n\r\n  /**\r\n   * Perform file operation in a bucket.\r\n   *\r\n   * @param id The bucket id to operate on.\r\n   */\r\n  from(id: string): StorageFileApi {\r\n    return new StorageFileApi(this.url, this.headers, id, this.fetch)\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,2BAA2B;AACtD,OAAOC,gBAAgB,MAAM,6BAA6B;AAO1D,OAAM,MAAOC,aAAc,SAAQD,gBAAgB;EACjDE,YACEC,GAAW,EACXC,OAAA,GAAqC,EAAE,EACvCC,KAAa,EACbC,IAA2B;IAE3B,KAAK,CAACH,GAAG,EAAEC,OAAO,EAAEC,KAAK,EAAEC,IAAI,CAAC;EAClC;EAEA;;;;;EAKAC,IAAIA,CAACC,EAAU;IACb,OAAO,IAAIT,cAAc,CAAC,IAAI,CAACI,GAAG,EAAE,IAAI,CAACC,OAAO,EAAEI,EAAE,EAAE,IAAI,CAACH,KAAK,CAAC;EACnE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
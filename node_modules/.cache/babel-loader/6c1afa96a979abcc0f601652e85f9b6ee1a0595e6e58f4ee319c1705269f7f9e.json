{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n// @ts-ignore\nimport nodeFetch, { Headers as NodeFetchHeaders } from '@supabase/node-fetch';\nexport const resolveFetch = customFetch => {\n  let _fetch;\n  if (customFetch) {\n    _fetch = customFetch;\n  } else if (typeof fetch === 'undefined') {\n    _fetch = nodeFetch;\n  } else {\n    _fetch = fetch;\n  }\n  return (...args) => _fetch(...args);\n};\nexport const resolveHeadersConstructor = () => {\n  if (typeof Headers === 'undefined') {\n    return NodeFetchHeaders;\n  }\n  return Headers;\n};\nexport const fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n  const fetch = resolveFetch(customFetch);\n  const HeadersConstructor = resolveHeadersConstructor();\n  return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    const accessToken = (_a = yield getAccessToken()) !== null && _a !== void 0 ? _a : supabaseKey;\n    let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n    if (!headers.has('apikey')) {\n      headers.set('apikey', supabaseKey);\n    }\n    if (!headers.has('Authorization')) {\n      headers.set('Authorization', `Bearer ${accessToken}`);\n    }\n    return fetch(input, Object.assign(Object.assign({}, init), {\n      headers\n    }));\n  });\n};","map":{"version":3,"names":["nodeFetch","Headers","NodeFetchHeaders","resolveFetch","customFetch","_fetch","fetch","args","resolveHeadersConstructor","fetchWithAuth","supabaseKey","getAccessToken","HeadersConstructor","input","init","__awaiter","accessToken","_a","headers","has","set","Object","assign"],"sources":["C:\\projects\\cidika-travel\\node_modules\\@supabase\\supabase-js\\src\\lib\\fetch.ts"],"sourcesContent":["// @ts-ignore\r\nimport nodeFetch, { Headers as NodeFetchHeaders } from '@supabase/node-fetch'\r\n\r\ntype Fetch = typeof fetch\r\n\r\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\r\n  let _fetch: Fetch\r\n  if (customFetch) {\r\n    _fetch = customFetch\r\n  } else if (typeof fetch === 'undefined') {\r\n    _fetch = nodeFetch as unknown as Fetch\r\n  } else {\r\n    _fetch = fetch\r\n  }\r\n  return (...args: Parameters<Fetch>) => _fetch(...args)\r\n}\r\n\r\nexport const resolveHeadersConstructor = () => {\r\n  if (typeof Headers === 'undefined') {\r\n    return NodeFetchHeaders\r\n  }\r\n\r\n  return Headers\r\n}\r\n\r\nexport const fetchWithAuth = (\r\n  supabaseKey: string,\r\n  getAccessToken: () => Promise<string | null>,\r\n  customFetch?: Fetch\r\n): Fetch => {\r\n  const fetch = resolveFetch(customFetch)\r\n  const HeadersConstructor = resolveHeadersConstructor()\r\n\r\n  return async (input, init) => {\r\n    const accessToken = (await getAccessToken()) ?? supabaseKey\r\n    let headers = new HeadersConstructor(init?.headers)\r\n\r\n    if (!headers.has('apikey')) {\r\n      headers.set('apikey', supabaseKey)\r\n    }\r\n\r\n    if (!headers.has('Authorization')) {\r\n      headers.set('Authorization', `Bearer ${accessToken}`)\r\n    }\r\n\r\n    return fetch(input, { ...init, headers })\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,SAAS,IAAIC,OAAO,IAAIC,gBAAgB,QAAQ,sBAAsB;AAI7E,OAAO,MAAMC,YAAY,GAAIC,WAAmB,IAAW;EACzD,IAAIC,MAAa;EACjB,IAAID,WAAW,EAAE;IACfC,MAAM,GAAGD,WAAW;GACrB,MAAM,IAAI,OAAOE,KAAK,KAAK,WAAW,EAAE;IACvCD,MAAM,GAAGL,SAA6B;GACvC,MAAM;IACLK,MAAM,GAAGC,KAAK;;EAEhB,OAAO,CAAC,GAAGC,IAAuB,KAAKF,MAAM,CAAC,GAAGE,IAAI,CAAC;AACxD,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAGA,CAAA,KAAK;EAC5C,IAAI,OAAOP,OAAO,KAAK,WAAW,EAAE;IAClC,OAAOC,gBAAgB;;EAGzB,OAAOD,OAAO;AAChB,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAGA,CAC3BC,WAAmB,EACnBC,cAA4C,EAC5CP,WAAmB,KACV;EACT,MAAME,KAAK,GAAGH,YAAY,CAACC,WAAW,CAAC;EACvC,MAAMQ,kBAAkB,GAAGJ,yBAAyB,EAAE;EAEtD,OAAO,CAAOK,KAAK,EAAEC,IAAI,KAAIC,SAAA;;IAC3B,MAAMC,WAAW,GAAG,CAAAC,EAAA,GAAC,MAAMN,cAAc,EAAG,cAAAM,EAAA,cAAAA,EAAA,GAAIP,WAAW;IAC3D,IAAIQ,OAAO,GAAG,IAAIN,kBAAkB,CAACE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,OAAO,CAAC;IAEnD,IAAI,CAACA,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAE;MAC1BD,OAAO,CAACE,GAAG,CAAC,QAAQ,EAAEV,WAAW,CAAC;;IAGpC,IAAI,CAACQ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,EAAE;MACjCD,OAAO,CAACE,GAAG,CAAC,eAAe,EAAE,UAAUJ,WAAW,EAAE,CAAC;;IAGvD,OAAOV,KAAK,CAACO,KAAK,EAAAQ,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAOR,IAAI;MAAEI;IAAO,GAAG;EAC3C,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}